@model GameDisplayModel
@{
    ViewData["Title"] = "Manage Games";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
<div class="my-2">
    <form asp-action="Index" class="row row-cols-lg-auto g-3 align-items-center">

        <div class="col-12">
            <label class="visually-hidden" for="genreId">Genres</label>
            <select class="form-select" id="genreId" name="genreId">
                <option selected>Genre</option>
                @foreach (var genre in Model.Genres)
                {
                    <option selected="@(genre.Id==Model.GenreId)" value="@genre.Id">@genre.GenreName</option>
                }
            </select>
        </div>
        <div class="col-12">
            <label class="visually-hidden" for="sterm">Search by title</label>
            <div class="input-group">
                <div class="input-group-text"></div>
                <input type="text" class="form-control" value="@Model.STerm" id="sterm" name="sterm" placeholder="Search by title">
            </div>
        </div>

        <div class="col-12">
            <button type="submit" class="btn btn-primary">Search</button>
            <a href="/Home/Index" class="btn btn-dark">Reset</a>
        </div>
        
    </form>
    <a asp-action="Create" class="btn btn-primary">Add New Game</a>
</div>

@foreach (var game in Model.Games)
{
    <div class="card mx-2 mb-4" style="width: 11rem;">
        <img src="@game.ImageUrl" class="card-img-top" alt="@game.GameName">
        <div class="card-body">
            <h5 class="card-title">@game.GameName</h5>
            <p class="card-text">Genre:@game.Genre.GenreName</p>
            <p>Developer:@game.Developer</p>
            <p>Price:@game.Price</p>
            <a asp-action="Edit" asp-route-id="@game.Id" class="btn btn-primary"><i class="fa fa-pencil"></i>Edit</a>
            <a asp-action="Details" asp-route-id="@game.Id" class="btn btn-secondary"><i class="fa fa-eye"></i>Details</a>
            <a asp-action="Delete" asp-route-id="@game.Id" class="btn btn-danger"><i class="fa fa-trash"></i>Delete</a>
        </div>
    </div>
}

</div>

@* @section Scripts {
    <script>
        async function add(gameId) {
            var usernameEl = document.getElementById("username");
            if (usernameEl == null) {
                window.location.href = "/Identity/Account/Login";
                //var username=usernameEl.innerText;
                //  if(username.length<1){
                //      window.location.href="/Identity/Account/Login";
                //  }
            }
            try {
                var response = await fetch(`/Cart/AddItem?gameId=${gameId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                    window.location.href = "#cartCount";
                }
            }
            catch (err) {
                console.log(err);
            }
        }
    </script>
} *@

@section Scripts {
    <script>
        document.querySelectorAll('.delete-button').forEach(function (button) {
            button.addEventListener('click', function (e) {
                if (confirm('Are you sure you want to delete this game?')) {
                    var form = e.target.closest('.delete-form');
                    var id = form.querySelector('input[name="id"]').value;
                    var token = form.querySelector('input[name="__RequestVerificationToken"]').value;
                    fetch('/Admin/Delete/' + id, {
                        method: 'POST',
                        headers: {
                            'RequestVerificationToken': token
                        }
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert('Game has been successfully deleted.');
                                // Remove the game card from the page
                                var gameCard = e.target.closest('.card');
                                gameCard.parentNode.removeChild(gameCard);
                            } else {
                                alert('An error occurred while deleting the game.');
                            }
                        });
                }
            });
        });
    </script>
}
